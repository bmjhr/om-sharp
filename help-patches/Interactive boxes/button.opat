
(:patch
 (:name "button")
 (:doc "")
 (:info
  (:created "2020/06/30 13:35:53")
  (:modified "2020/07/04 17:34:10")
  (:by "om-sharp")
  (:version 1.0))
 (:window (:size (1518 973)) (:position (132 50)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 51)
   (:y 17)
   (:w 172)
   (:h 42)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border (:number-or-nil (:number 0.0) (:t-or-nil t)))
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 18) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "the BUTTON box")
   (:id 0))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "advanced usage")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1297 962)) (:position (426 53)))
     (:grid nil)
     (:lock t)
     (:boxes
      (:box
       (:type :interface)
       (:reference button)
       (:group-id nil)
       (:name "button")
       (:x 61)
       (:y 117)
       (:w 235)
       (:h 51)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:send-value t)
       (:text "change interval sizes")
       (:inputs)
       (:outputs (:output (:name "value") (:reactive t)))
       (:value nil)
       (:id 0))
      (:box
       (:type :function)
       (:reference seq)
       (:group-id nil)
       (:name "seq")
       (:x 98)
       (:y 352)
       (:w 144)
       (:h 32)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OP")
         (:value 0)
         (:reactive t))
        (:input
         (:type :optional)
         (:name "op+")
         (:value 0)
         (:reactive t)))
       (:outputs
        (:output (:name "out") (:reactive t))
        (:output (:name "op+1") (:reactive t)))
       (:id 1))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 202)
       (:y 188)
       (:w 99)
       (:h 32)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 11)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 241)
       (:y 256)
       (:w 92)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 354)
       (:y 150)
       (:w 52)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 3)
       (:id 4))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 101)
       (:y 434)
       (:w 117)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive t))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive t))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive t)))
       (:outputs
        (:output (:name "collect") (:reactive t))
        (:output (:name "data-out") (:reactive t))
        (:output (:name "init") (:reactive t)))
       (:id 5))
      (:box
       (:type :function)
       (:reference last-elem)
       (:group-id nil)
       (:name "last-elem")
       (:x 141)
       (:y 503)
       (:w 136)
       (:h 32)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive t)))
       (:outputs (:output (:name "out") (:reactive t)))
       (:id 6))
      (:box
       (:type :interface)
       (:reference button)
       (:group-id nil)
       (:name "button")
       (:x 447)
       (:y 92)
       (:w 235)
       (:h 51)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:send-value t)
       (:text "change sequence")
       (:inputs)
       (:outputs (:output (:name "value") (:reactive t)))
       (:value nil)
       (:id 7))
      (:box
       (:type :function)
       (:reference seq)
       (:group-id nil)
       (:name "seq")
       (:x 467)
       (:y 335)
       (:w 144)
       (:h 32)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OP")
         (:value 0)
         (:reactive t))
        (:input
         (:type :optional)
         (:name "op+")
         (:value 0)
         (:reactive t)))
       (:outputs
        (:output (:name "out") (:reactive t))
        (:output (:name "op+1") (:reactive t)))
       (:id 8))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 597)
       (:y 226)
       (:w 99)
       (:h 32)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 11)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 585)
       (:y 278)
       (:w 201)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 10))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 470)
       (:y 417)
       (:w 117)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive t))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive t))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive t)))
       (:outputs
        (:output (:name "collect") (:reactive t))
        (:output (:name "data-out") (:reactive t))
        (:output (:name "init") (:reactive t)))
       (:id 11))
      (:box
       (:type :function)
       (:reference last-elem)
       (:group-id nil)
       (:name "last-elem")
       (:x 500)
       (:y 496)
       (:w 136)
       (:h 32)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive t)))
       (:outputs (:output (:name "out") (:reactive t)))
       (:id 12))
      (:box
       (:type :function)
       (:reference 1-)
       (:group-id nil)
       (:name "1-")
       (:x 677)
       (:y 172)
       (:w 49)
       (:h 32)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 788)
       (:y 116)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 20)
       (:id 14))
      (:box
       (:type :interface)
       (:reference button)
       (:group-id nil)
       (:name "button")
       (:x 867)
       (:y 187)
       (:w 235)
       (:h 51)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:send-value t)
       (:text "change direction sequence")
       (:inputs)
       (:outputs (:output (:name "value") (:reactive t)))
       (:value nil)
       (:id 15))
      (:box
       (:type :function)
       (:reference seq)
       (:group-id nil)
       (:name "seq")
       (:x 889)
       (:y 456)
       (:w 144)
       (:h 32)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OP")
         (:value 0)
         (:reactive t))
        (:input
         (:type :optional)
         (:name "op+")
         (:value 0)
         (:reactive t)))
       (:outputs
        (:output (:name "out") (:reactive t))
        (:output (:name "op+1") (:reactive t)))
       (:id 16))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 1011)
       (:y 354)
       (:w 99)
       (:h 32)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value -1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 1007)
       (:y 399)
       (:w 201)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 18))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 892)
       (:y 538)
       (:w 117)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive t))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive t))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive t)))
       (:outputs
        (:output (:name "collect") (:reactive t))
        (:output (:name "data-out") (:reactive t))
        (:output (:name "init") (:reactive t)))
       (:id 19))
      (:box
       (:type :function)
       (:reference last-elem)
       (:group-id nil)
       (:name "last-elem")
       (:x 584)
       (:y 589)
       (:w 136)
       (:h 32)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive t)))
       (:outputs (:output (:name "out") (:reactive t)))
       (:id 20))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1010)
       (:y 302)
       (:w 36)
       (:h 32)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value -1)
       (:id 21))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1071)
       (:y 294)
       (:w 32)
       (:h 32)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 22))
      (:box
       (:type :function)
       (:reference posn-match)
       (:group-id nil)
       (:name "posn-match")
       (:x 327)
       (:y 568)
       (:w 101)
       (:h 32)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value (:list 10 20 30 40 50 60 70 80 90))
         (:reactive t))
        (:input
         (:type :standard)
         (:name "POSITIONS")
         (:value (:list (:list 0 1) 4 (:list 6)))
         (:reactive t)))
       (:outputs (:output (:name "out") (:reactive t)))
       (:id 23))
      (:box
       (:type :function)
       (:reference om*)
       (:group-id nil)
       (:name "om*")
       (:x 245)
       (:y 302)
       (:w 59)
       (:h 32)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 100)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :function)
       (:reference dx->x)
       (:group-id nil)
       (:name "dx->x")
       (:x 496)
       (:y 703)
       (:w 68)
       (:h 32)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "START")
         (:value 6000)
         (:reactive t))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value (:list 1 1))
         (:reactive t)))
       (:outputs (:output (:name "out") (:reactive t)))
       (:id 25))
      (:box
       (:type :function)
       (:reference om*)
       (:group-id nil)
       (:name "om*")
       (:x 370)
       (:y 647)
       (:w 330)
       (:h 32)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive t))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive t)))
       (:outputs (:output (:name "out") (:reactive t)))
       (:id 26))
      (:box
       (:type :object)
       (:reference chord-seq)
       (:group-id nil)
       (:name nil)
       (:x 271)
       (:y 765)
       (:w 534)
       (:h 139)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive t))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list (:list 6000)))
         (:reactive t))
        (:input
         (:type :standard)
         (:name "LONSET")
         (:value (:list 0 1000))
         (:reactive t))
        (:input
         (:type :standard)
         (:name "LDUR")
         (:value (:list (:list 1000)))
         (:reactive t))
        (:input
         (:type :standard)
         (:name "LVEL")
         (:value 100)
         (:reactive t)))
       (:outputs
        (:output (:name "SELF") (:reactive t))
        (:output (:name "LMIDIC") (:reactive t))
        (:output (:name "LONSET") (:reactive t))
        (:output (:name "LDUR") (:reactive t))
        (:output (:name "LVEL") (:reactive t)))
       (:window (:size nil) (:position nil))
       (:edition-params (:staff :gf) (:scale :scale-1/2))
       (:value
        (:object
         (:class chord-seq)
         (:slots
          ((:onset 0)
           (:duration 21000)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name nil)
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:lmidic
            (:list
             (:list 6000)
             (:list 6000)
             (:list 6000)
             (:list 7000)
             (:list 7000)
             (:list 8000)
             (:list 7500)
             (:list 7500)
             (:list 7600)
             (:list 7600)
             (:list 8100)
             (:list 8100)
             (:list 8200)
             (:list 7200)
             (:list 7200)
             (:list 7200)
             (:list 7200)
             (:list 8200)
             (:list 8300)
             (:list 8400)
             (:list 8400)))
           (:lonset
            (:list
             0
             1000
             2000
             3000
             4000
             5000
             6000
             7000
             8000
             9000
             10000
             11000
             12000
             13000
             14000
             15000
             16000
             17000
             18000
             19000
             20000
             21000))
           (:ldur (:list 1000))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:lchan (:list 1))
           (:lport (:list nil))
           (:llegato nil)))))
       (:id 27))
      (:comment
       (:x 63)
       (:y 46)
       (:w 459)
       (:h 22)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text
        "n.b.  all of these buttons have to be clicked at least once to get a result below
")
       (:id 28)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 1 :out 1)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 1 :out 1)) (:to (:box 5 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 5 :out 1)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 23 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 8 :out 1)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 8 :out 1)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 11 :out 1)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 23 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 16 :out 1)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 16 :out 1)) (:to (:box 19 :in 1)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 16 :in 1)))
      (:connection (:from (:box 19 :out 1)) (:to (:box 20 :in 0)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 26 :in 1)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 17 :in 1)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 26 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 1 :in 1)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 27 :in 1)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 25 :in 1))))))
   (:group-id nil)
   (:name "advanced usage")
   (:x 752)
   (:y 560)
   (:w 200)
   (:h 196)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 1))
  (:box
   (:type :interface)
   (:reference button)
   (:group-id nil)
   (:name "button")
   (:x 217)
   (:y 137)
   (:w 102)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:send-value "Hello World")
   (:text "Hello World")
   (:inputs)
   (:outputs (:output (:name "value") (:reactive t)))
   (:value nil)
   (:id 2))
  (:box
   (:type :function)
   (:reference print)
   (:group-id nil)
   (:name "print")
   (:x 233)
   (:y 232)
   (:w 76)
   (:h 32)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOMETHING")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 3))
  (:comment
   (:x 166)
   (:y 91)
   (:w 329)
   (:h 50)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "In reactive mode, a button sends a value when clicked (command-clicked if patch is unlocked)")
   (:id 4))
  (:comment
   (:x 169)
   (:y 272)
   (:w 319)
   (:h 32)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "if evaluated in the standard manner, a button returns nil.")
   (:id 5))
  (:box
   (:type :special)
   (:reference collect)
   (:group-id nil)
   (:name "collect")
   (:x 247)
   (:y 682)
   (:w 275)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data-in")
     (:value nil)
     (:reactive t))
    (:input (:type :standard) (:name "push") (:value t) (:reactive t))
    (:input
     (:type :standard)
     (:name "init")
     (:value nil)
     (:reactive t)))
   (:outputs
    (:output (:name "collect") (:reactive t))
    (:output (:name "data-out") (:reactive t))
    (:output (:name "init") (:reactive t)))
   (:id 6))
  (:box
   (:type :interface)
   (:reference button)
   (:group-id nil)
   (:name "button")
   (:x 250)
   (:y 479)
   (:w 102)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:send-value t)
   (:text "Add a number")
   (:inputs
    (:input
     (:type :key)
     (:name "send-value")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value nil)
   (:id 7))
  (:comment
   (:x 73)
   (:y 387)
   (:w 244)
   (:h 79)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "the send-value can be set in the info pane, or using a keyword input. It can be anything, even a lambda function:")
   (:id 8))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 345)
   (:y 412)
   (:w 99)
   (:h 32)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive t))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 10)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 9))
  (:box
   (:type :function)
   (:reference print)
   (:group-id nil)
   (:name "print")
   (:x 337)
   (:y 762)
   (:w 61)
   (:h 32)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOMETHING")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 10))
  (:box
   (:type :function)
   (:reference funcall)
   (:group-id nil)
   (:name "funcall")
   (:x 265)
   (:y 542)
   (:w 73)
   (:h 32)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 11))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 356)
   (:y 377)
   (:w 32)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 12))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 401)
   (:y 377)
   (:w 32)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 10)
   (:id 13))
  (:box
   (:type :function)
   (:reference seq)
   (:group-id nil)
   (:name "seq")
   (:x 275)
   (:y 598)
   (:w 113)
   (:h 32)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "OP") (:value nil) (:reactive t))
    (:input
     (:type :optional)
     (:name "op+")
     (:value nil)
     (:reactive t)))
   (:outputs
    (:output (:name "out") (:reactive t))
    (:output (:name "op+1") (:reactive t)))
   (:id 14))
  (:box
   (:type :interface)
   (:reference button)
   (:group-id nil)
   (:name "button")
   (:x 476)
   (:y 526)
   (:w 102)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:send-value t)
   (:text "reset")
   (:inputs
    (:input
     (:type :key)
     (:name "send-value")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value nil)
   (:id 15))
  (:box
   (:type :special)
   (:reference tcollect)
   (:group-id nil)
   (:name "tcollect")
   (:x 796)
   (:y 218)
   (:w 104)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data-in")
     (:value nil)
     (:reactive t))
    (:input (:type :standard) (:name "push") (:value t) (:reactive t))
    (:input
     (:type :standard)
     (:name "init")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "delay")
     (:value 0)
     (:reactive t)))
   (:outputs
    (:output (:name "collect") (:reactive t))
    (:output (:name "data-out") (:reactive t))
    (:output (:name "init") (:reactive t))
    (:output (:name "time-list") (:reactive t)))
   (:id 16))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 895)
   (:y 139)
   (:w 72)
   (:h 38)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5000)
   (:id 17))
  (:box
   (:type :function)
   (:reference print)
   (:group-id nil)
   (:name "print")
   (:x 789)
   (:y 408)
   (:w 61)
   (:h 32)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOMETHING")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 18))
  (:box
   (:type :interface)
   (:reference button)
   (:group-id nil)
   (:name "button")
   (:x 752)
   (:y 122)
   (:w 102)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:send-value t)
   (:text "foo")
   (:inputs)
   (:outputs (:output (:name "value") (:reactive t)))
   (:value nil)
   (:id 19))
  (:box
   (:type :function)
   (:reference length)
   (:group-id nil)
   (:name "length")
   (:x 856)
   (:y 342)
   (:w 71)
   (:h 32)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 20))
  (:box
   (:type :function)
   (:reference last-elem)
   (:group-id nil)
   (:name "last-elem")
   (:x 823)
   (:y 291)
   (:w 87)
   (:h 32)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 21))
  (:comment
   (:x 682)
   (:y 62)
   (:w 282)
   (:h 41)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "with a timed collect: this prints the number of clicks, but resets every 5 seconds")
   (:id 22)))
 (:connections
  (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 6 :out 1)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 1)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 6 :in 0)))
  (:connection (:from (:box 14 :out 1)) (:to (:box 6 :in 1)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 6 :in 2)))
  (:connection (:from (:box 16 :out 1)) (:to (:box 21 :in 0)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 16 :in 3)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 16 :in 0)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 16 :in 1)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 0)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 20 :in 0)))))