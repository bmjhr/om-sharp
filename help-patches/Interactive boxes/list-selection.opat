
(:patch
 (:name "list-selection")
 (:doc "")
 (:info
  (:created "2020/07/01 22:03:46")
  (:modified "2020/07/01 22:21:30")
  (:by "om-sharp")
  (:version 1.0))
 (:window (:size (1236 864)) (:position (547 173)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 58)
   (:y 24)
   (:w 317)
   (:h 53)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border (:number-or-nil (:number 0.0) (:t-or-nil t)))
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 18) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "the LIST-SELECTION box")
   (:id 0))
  (:box
   (:type :interface)
   (:reference list-selection)
   (:group-id nil)
   (:name "list-selection")
   (:x 41)
   (:y 88)
   (:w 212)
   (:h 158)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:multiple-selection nil)
   (:cell-height 20)
   (:cell-font (:font (:face "Calibri") (:size 12) (:style :plain)))
   (:output-mode :index)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:items
    (:list ionian dorian phrygian lydian mixolydian aeolian lochrian))
   (:selection (:list 5))
   (:id 1))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 721)
   (:y 91)
   (:w 109)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list foo bar baz))
   (:id 2))
  (:box
   (:type :function)
   (:reference rotate)
   (:group-id nil)
   (:name "rotate")
   (:x 174)
   (:y 412)
   (:w 178)
   (:h 32)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "nth")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 358)
   (:y 306)
   (:w 217)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 200 200 100 200 200 200 100))
   (:id 4))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name nil)
   (:x 56)
   (:y 597)
   (:w 325)
   (:h 116)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list (:list 6000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list (:list 1000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value 100)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil)))
   (:window (:size (650 300)) (:position (462 529)))
   (:edition-params (:font-size 40))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 8000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name nil)
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:lmidic
        (:list
         (:list 6000)
         (:list 6200)
         (:list 6300)
         (:list 6500)
         (:list 6700)
         (:list 6900)
         (:list 7000)
         (:list 7200)))
       (:lonset (:list 0 1000 2000 3000 4000 5000 6000 7000 8000))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 1))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 5))
  (:box
   (:type :function)
   (:reference dx->x)
   (:group-id nil)
   (:name "dx->x")
   (:x 198)
   (:y 464)
   (:w 68)
   (:h 32)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "START")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value (:list 1 1))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :function)
   (:reference omif)
   (:group-id nil)
   (:name "omif")
   (:x 68)
   (:y 520)
   (:w 124)
   (:h 32)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TEST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ACTION")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :interface)
   (:reference list-selection)
   (:group-id nil)
   (:name "list-selection")
   (:x 733)
   (:y 158)
   (:w 78)
   (:h 84)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:multiple-selection nil)
   (:cell-height 20)
   (:cell-font (:font (:face "Calibri") (:size 12) (:style :plain)))
   (:output-mode :index)
   (:inputs
    (:input (:type :key) (:name "items") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value 2)
   (:items (:list foo bar baz))
   (:selection (:list 2))
   (:id 8))
  (:comment
   (:x 324)
   (:y 111)
   (:w 243)
   (:h 135)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Interactively select a value out of a list of options. (Evaluate the chord-seq after changing the value, by command-clicking, to see the change)

Use reactive mode to make evaluations instantly upon manipulation.")
   (:id 9))
  (:comment
   (:x 681)
   (:y 274)
   (:w 215)
   (:h 99)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "use the optional input to compose the list of options. It's best to remove the input for use in a patch, so that the list of items doesn't get erased on evaluation!")
   (:id 10))
  (:comment
   (:x 170)
   (:y 260)
   (:w 354)
   (:h 40)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "in this case the output mode is \"index\". You can also output the option text itself (\"value\" mode ... see info and properties)")
   (:id 11))
  (:comment
   (:x 676)
   (:y 451)
   (:w 215)
   (:h 99)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "multiple selection is also possible (this is set in info and properties). Output is a list of indexes or values.")
   (:id 12))
  (:box
   (:type :interface)
   (:reference list-selection)
   (:group-id nil)
   (:name "list-selection")
   (:x 585)
   (:y 413)
   (:w 76)
   (:h 125)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:multiple-selection t)
   (:cell-height 14)
   (:cell-font (:font (:face "Calibri") (:size 12) (:style :plain)))
   (:output-mode :value)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive t)))
   (:value nil)
   (:items (:list 1 2 4 8 16 32))
   (:selection nil)
   (:id 13))
  (:box
   (:type :function)
   (:reference apply)
   (:group-id nil)
   (:name "apply")
   (:x 567)
   (:y 597)
   (:w 106)
   (:h 32)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "ARG")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 14))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "value box")
   (:x 506)
   (:y 538)
   (:w 32)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value +)
   (:id 15))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 580)
   (:y 671)
   (:w 138)
   (:h 47)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font
      (:font
       (:face "Arial Unicode MS")
       (:size 18.0D0)
       (:style :plain)))
     (:t-or-nil t)))
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value 0)
   (:id 16)))
 (:connections
  (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 6 :in 1)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 1)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 5 :in 1)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 14 :in 1)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 16 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))))